{
  "hash": "7fcabc422988d59ba2d2051b12df9b80",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Esercizi\"\n---\n\n## Esercizi Giorno 1\n\n### Esercizio 1.1: Primo Scatterplot\n\nUsa il dataset `penguins` per creare uno scatterplot che mostri:\n\n- X axis: `flipper_length_mm`\n- Y axis: `body_mass_g`\n- Color: `species`\n- Add appropriate labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Il tuo codice qui\n```\n:::\n\n\n<details>\n<summary>üí° Soluzione</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +\n  geom_point(size = 3, alpha = 0.7) +\n  labs(\n    title = \"Relazione tra Lunghezza Pinne e Massa Corporea\",\n    x = \"Lunghezza Pinne (mm)\",\n    y = \"Massa Corporea (g)\",\n    color = \"Specie\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n</details>\n\n---\n\n### Esercizio 1.2: Bar Chart con Facets\n\nCrea un bar chart che mostri:\n\n- Il conteggio di pinguini per `island`\n- Diviso per `species` usando facets\n- Colora le barre per `sex`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Il tuo codice qui\n```\n:::\n\n\n<details>\n<summary>üí° Soluzione</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(island, fill = sex)) +\n  geom_bar(position = \"dodge\") +\n  facet_wrap(~species) +\n  labs(\n    title = \"Distribuzione Pinguini per Isola, Specie e Sesso\",\n    x = \"Isola\",\n    y = \"Conteggio\",\n    fill = \"Sesso\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n</details>\n\n---\n\n### Esercizio 1.3: Histogram e Density\n\nCrea due grafici della distribuzione di `body_mass_g`:\n\n1. Un histogram con 30 bins\n2. Un density plot colorato per specie\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Il tuo codice qui\n```\n:::\n\n\n<details>\n<summary>üí° Soluzione</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histogram\nggplot(penguins, aes(body_mass_g)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\") +\n  labs(\n    title = \"Distribuzione Massa Corporea\",\n    x = \"Massa Corporea (g)\",\n    y = \"Conteggio\"\n  ) +\n  theme_minimal()\n\n# Density plot\nggplot(penguins, aes(body_mass_g, fill = species)) +\n  geom_density(alpha = 0.6) +\n  labs(\n    title = \"Distribuzione Massa Corporea per Specie\",\n    x = \"Massa Corporea (g)\",\n    y = \"Densit√†\",\n    fill = \"Specie\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n</details>\n\n---\n\n### Esercizio 1.4: Boxplot Complesso\n\nCrea un boxplot che mostri:\n\n- Y axis: `bill_length_mm`\n- X axis: `species`\n- Fill color: `island`\n- Usa `position = \"dodge\"` per separare i boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Il tuo codice qui\n```\n:::\n\n\n<details>\n<summary>üí° Soluzione</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(species, bill_length_mm, fill = island)) +\n  geom_boxplot(position = \"dodge\") +\n  labs(\n    title = \"Lunghezza Becco per Specie e Isola\",\n    x = \"Specie\",\n    y = \"Lunghezza Becco (mm)\",\n    fill = \"Isola\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n</details>\n\n---\n\n## Esercizi Giorno 2\n\n### Esercizio 2.1: Scale e Trasformazioni\n\nUsando il dataset `diamonds`, crea uno scatterplot di `carat` vs `price`:\n\n- Usa trasformazione logaritmica per entrambi gli assi\n- Colora i punti per `cut`\n- Usa una palette viridis\n- Aggiungi trasparenza ai punti\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Il tuo codice qui\n```\n:::\n\n\n<details>\n<summary>üí° Soluzione</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(diamonds, aes(carat, price, color = cut)) +\n  geom_point(alpha = 0.3, size = 1) +\n  scale_x_log10() +\n  scale_y_log10() +\n  scale_color_viridis_d() +\n  labs(\n    title = \"Prezzo vs Carati (scala logaritmica)\",\n    x = \"Carati (log scale)\",\n    y = \"Prezzo (log scale)\",\n    color = \"Taglio\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n</details>\n\n---\n\n### Esercizio 2.2: Theme Personalizzato\n\nCrea un theme personalizzato chiamato `theme_my_style()` che:\n\n- Usa `theme_minimal()` come base\n- Ha sfondo grigio chiaro\n- Titolo centrato e in grassetto\n- Legenda in basso\n- Rimuove le linee di griglia minori\n\nApplicalo a un grafico a tua scelta.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Il tuo codice qui\n```\n:::\n\n\n<details>\n<summary>üí° Soluzione</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_my_style <- function() {\n  theme_minimal() +\n    theme(\n      plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n      panel.background = element_rect(fill = \"gray95\", color = NA),\n      legend.position = \"bottom\",\n      panel.grid.minor = element_blank(),\n      axis.title = element_text(face = \"bold\")\n    )\n}\n\n# Applicarlo\nggplot(penguins, aes(species, body_mass_g, fill = species)) +\n  geom_boxplot() +\n  labs(title = \"Distribuzione Massa Corporea per Specie\") +\n  theme_my_style() +\n  theme(legend.position = \"none\")\n```\n:::\n\n\n</details>\n\n---\n\n### Esercizio 2.3: Grafici Combinati\n\nUsando il dataset `penguins`, crea 4 grafici e combinali con `patchwork`:\n\n1. Bar chart del conteggio per specie\n2. Boxplot di body_mass_g per specie\n3. Scatterplot flipper_length vs body_mass_g colorato per specie\n4. Density plot di bill_length_mm per specie\n\nDisponi i grafici in un layout 2x2 con un titolo generale.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n# Il tuo codice qui\n```\n:::\n\n\n<details>\n<summary>üí° Soluzione</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\np1 <- ggplot(penguins, aes(species, fill = species)) +\n  geom_bar() +\n  labs(title = \"Conteggio\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\np2 <- ggplot(penguins, aes(species, body_mass_g, fill = species)) +\n  geom_boxplot() +\n  labs(title = \"Massa Corporea\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\np3 <- ggplot(penguins, aes(flipper_length_mm, body_mass_g, color = species)) +\n  geom_point(alpha = 0.6) +\n  labs(title = \"Pinne vs Massa\") +\n  theme_minimal()\n\np4 <- ggplot(penguins, aes(bill_length_mm, fill = species)) +\n  geom_density(alpha = 0.6) +\n  labs(title = \"Lunghezza Becco\") +\n  theme_minimal()\n\n(p1 | p2) / (p3 | p4) +\n  plot_annotation(\n    title = \"Analisi Multi-pannello Pinguini Palmer\",\n    tag_levels = \"A\"\n  )\n```\n:::\n\n\n</details>\n\n---\n\n### Esercizio 2.4: Visualizzazione Pubblicazione\n\nCrea un grafico publication-ready con:\n\n- Dataset: `mpg`\n- Scatterplot di `displ` vs `hwy`\n- Smooth line per ogni `class` di auto\n- Scala colori ColorBrewer \"Set2\"\n- Theme pulito e professionale\n- Titolo, sottotitolo e caption\n- Dimensioni appropriate per pubblicazione (width=10, height=6)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Il tuo codice qui\n```\n:::\n\n\n<details>\n<summary>üí° Soluzione</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_publication <- ggplot(mpg, aes(displ, hwy, color = class)) +\n  geom_point(alpha = 0.6, size = 2) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 1) +\n  scale_color_brewer(palette = \"Set2\") +\n  labs(\n    title = \"Fuel Economy vs Engine Displacement\",\n    subtitle = \"Analysis by vehicle class\",\n    x = \"Engine Displacement (liters)\",\n    y = \"Highway Miles per Gallon\",\n    color = \"Vehicle Class\",\n    caption = \"Data source: EPA (1999-2008)\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(color = \"gray40\", size = 12),\n    plot.caption = element_text(color = \"gray60\", hjust = 0),\n    legend.position = \"bottom\",\n    panel.grid.minor = element_blank(),\n    panel.border = element_rect(color = \"gray80\", fill = NA)\n  )\n\n# Salvare\nggsave(\n  \"fuel_economy_publication.png\",\n  plot = plot_publication,\n  width = 10,\n  height = 6,\n  dpi = 300,\n  bg = \"white\"\n)\n```\n:::\n\n\n</details>\n\n---\n\n## Progetti Challenge üèÜ\n\n### Challenge 1: Explorer\n\nEsplora il dataset `diamonds` e crea almeno 5 visualizzazioni diverse che rivelino insights interessanti sui dati.\n\n### Challenge 2: Storyteller\n\nUsando i dataset `gapminder` (pacchetto gapminder), crea una storia visiva che mostri l'evoluzione della vita nel mondo negli ultimi decenni.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"gapminder\")\nlibrary(gapminder)\ndata(gapminder)\n```\n:::\n\n\n### Challenge 3: Designer\n\nRicrea il tuo grafico preferito da un giornale/pubblicazione usando ggplot2 e dati pubblici.\n\n---\n\n## Risorse Aggiuntive\n\n- [R Graph Gallery](https://r-graph-gallery.com/) - Esempi e codice\n- [TidyTuesday](https://github.com/rfordatascience/tidytuesday) - Dataset settimanali\n- [Stack Overflow - ggplot2](https://stackoverflow.com/questions/tagged/ggplot2)\n\n## Condividi il Tuo Lavoro!\n\nCondividi i tuoi grafici sul canale Slack del corso! üé®\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}