{
  "hash": "fd08cb780dc9012705a02b07ab1764e9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Themes e Personalizzazione\"\n---\n\n## Temi in ggplot2\n\nI temi controllano l'aspetto non-dati del grafico.\n\n## Temi predefiniti\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Minimal\nggplot(data, aes(x = x, y = y)) +\n  geom_point() +\n  theme_minimal()\n\n# Classic\ntheme_classic()\n\n# BW (bianco e nero)\ntheme_bw()\n\n# Dark\ntheme_dark()\n```\n:::\n\n\n## Temi da pacchetti esterni\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\n# Economist style\ntheme_economist()\n\n# FiveThirtyEight style\ntheme_fivethirtyeight()\n```\n:::\n\n\n## Personalizzare i temi\n\n### Elementi di testo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = x, y = y)) +\n  geom_point() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.text = element_text(size = 12),\n    axis.title = element_text(size = 14, face = \"bold\")\n  )\n```\n:::\n\n\n### Elementi di linea\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme(\n  axis.line = element_line(color = \"black\", size = 1),\n  panel.grid.major = element_line(color = \"gray\", linetype = \"dashed\")\n)\n```\n:::\n\n\n### Elementi di sfondo\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme(\n  panel.background = element_rect(fill = \"white\"),\n  plot.background = element_rect(fill = \"lightgray\"),\n  legend.background = element_rect(fill = \"white\", color = \"black\")\n)\n```\n:::\n\n\n### Rimuovere elementi\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme(\n  panel.grid = element_blank(),  # Rimuove griglia\n  legend.position = \"none\"       # Rimuove legenda\n)\n```\n:::\n\n\n## Etichette e titoli\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = x, y = y)) +\n  geom_point() +\n  labs(\n    title = \"Titolo del grafico\",\n    subtitle = \"Sottotitolo\",\n    x = \"Asse X\",\n    y = \"Asse Y\",\n    caption = \"Fonte: I miei dati\"\n  )\n```\n:::\n\n\n## Legenda\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Posizione\ntheme(legend.position = \"bottom\")  # \"top\", \"left\", \"right\", \"none\"\n\n# Titolo della legenda\nlabs(color = \"Categoria\", size = \"Valore\")\n\n# Personalizzare\ntheme(\n  legend.title = element_text(face = \"bold\"),\n  legend.text = element_text(size = 10)\n)\n```\n:::\n\n\n## Salvare il tema personalizzato\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_theme <- theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.text = element_text(size = 12)\n  )\n\n# Usare il tema\nggplot(data, aes(x = x, y = y)) +\n  geom_point() +\n  my_theme\n```\n:::\n\n\n## Esportare grafici\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggsave\nggsave(\"grafico.png\", width = 8, height = 6, dpi = 300)\n\n# Specificare il grafico\np <- ggplot(data, aes(x = x, y = y)) + geom_point()\nggsave(\"grafico.pdf\", plot = p, width = 10, height = 8)\n```\n:::\n\n\n## Esercizi\n\n1. Applica diversi temi predefiniti\n2. Crea un tema personalizzato\n3. Aggiungi titoli e etichette complete\n4. Salva un grafico in alta risoluzione\n\n## Risorse\n\n- [Themes documentation](https://ggplot2.tidyverse.org/reference/theme.html)\n- [ggthemes package](https://jrnold.github.io/ggthemes/)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}